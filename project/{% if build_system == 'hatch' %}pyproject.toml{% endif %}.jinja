[build-system]
build-backend = "hatchling.build"
requires = [
  "hatchling",
]

[project]
name = "{{project_slug}}"
version = "0.0.0"
description = "{{description}}"
readme = "README.md"
license = { text = "{{license}}" }
maintainers = [
  { name = "{{author_name}}" },
  { email = "{{author_email}}" },
]
authors = [
  { name = "{{author_name}}" },
  { email = "{{author_email}}" },
]
requires-python = ">=3.9"
dependencies = [
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Natural Language :: English",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Typing :: Typed",
]
[project.optional-dependencies]
dev = [
  "black>=22.12",
  "covdefaults>=2.2.2",
  "coverage[toml]>=7.1",
  "coverage-badge>=1.1",
  "isort>=5.11.4",
  "mkdocs>=1.4.2",
  "mkdocs-material>=9.0.7",
  "mypy>=0.991",
  "nox>=2022.11.21",
  "pre-commit>=3.0.1",
  "pytest>=7.2.1",
  "pytest-cov>=4",
  "ruff>=0.0.236",
]

[project.urls]
documentation = "https://{{github_username}}.github.io/{{project_slug}}/"
homepage = "{{github_url}}"
repository = "{{github_url}}"


[tool.isort]
profile = "black"

[tool.coverage.run]
plugins = [ "covdefaults" ]

[tool.mypy]
files = [ "**/*.py" ]
ignore_missing_imports = true
strict = true
pretty = true
disallow_untyped_decorators = false
show_error_codes = true
warn_unreachable = true
enable_error_code = [ "ignore-without-code", "redundant-expr", "truthy-bool" ]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [ "-ra", "--strict-markers", "--strict-config" ]
xfail_strict = true
filterwarnings = [ "error" ]
log_cli_level = "info"
testpaths = [ "tests" ]
pythonpath = [ "src" ]

[tool.ruff]
line-length = 120
select = [
  # https://github.com/charliermarsh/ruff#supported-rules
  "E",   # Pycodestyle errors
  "F",   # Pyflakes errors
  "W",   # Pycodestyle warnings
  "UP",  # All pyupgrade rules
  "N",   # PEP8 naming
  "I",   # Isort
  "C90", # Complexity
  "C4",  # Flake8 comprehensions
  "ERA", # Commented out code
  "B",   # Flake8 bugbear
  "RUF", # Ruff specific rules
  "YTT", # Flake8 2020
  "ANN", # Type annotations
  "BLE", # No blind excepts
  "PT",  # Pytest style
  "RET", # Function returns
  "SIM", # Simplify
  "ARG", # Unused arguments
  "PTH", # Use pathlib over os.path
  "PGH", # Pygrep hooks
]
ignore = [
  "B905",   # zip() without strict=
  "ANN101", # Missing type annotation for `self` in method
]

[tool.ruff.mccabe]
max-complexity = 15

[tool.ruff.isort]
required-imports = ["from __future__ import annotations"]
